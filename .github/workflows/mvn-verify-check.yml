# Copyright (c) 2022, NVIDIA CORPORATION.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# A workflow to run mvn verify check
name: mvn[compile,RAT,scalastyle,docgen]

on:
  pull_request:
    types: [opened, synchronize, reopened]

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  get-noSnapshot-versions-from-dist:
    runs-on: ubuntu-latest
    outputs:
      sparkHeadVersion: ${{ steps.noSnapshotVersionsStep.outputs.headVersion }}
      sparkTailVersions: ${{ steps.noSnapshotVersionsStep.outputs.tailVersions }}
    steps:
      - uses: actions/checkout@v2 # refs/pull/:prNumber/merge

      - name: Setup Java and Maven Env
        uses: actions/setup-java@v3
        with:
          distribution: adopt
          java-version: 8

      - name: all noSnapshot versions
        id: noSnapshotVersionsStep
        run: >
          set -x
          noSnapshotVersionsStr=$(mvn help:evaluate -q -pl dist
          -PnoSnapshots -Dexpression=included_buildvers -DforceStdout)
          noSnapshotVersionsArr=($(echo ${noSnapshotVersionStr//[$'\n',]/}))
          tailNoSnapshotVersionsArr=(${noSnapshotVersionsArr[@]:1})
          tailNoSnapshotVersionsCSV=$(IFS=", " ; echo "${tailNoSnapshotVersionsArr[*]}")
          echo ::set-output name=headVersion::${noSnapshotVersionsArr[0]}
          echo ::set-output name=tailVersions::[$tailNoSnapshotVersionsCSV]

  package-aggregator:
    needs: get-noSnapshot-versions-from-dist
    strategy:
      matrix:
        spark-version: ${{ fromJson(needs.get-noSnapshot-versions-from-dist.outputs.sparkTailVersions) }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2 # refs/pull/:prNumber/merge

      - name: Setup Java and Maven Env
        uses: actions/setup-java@v3
        with:
          distribution: adopt
          java-version: 8

      - name: package aggregator check
        run: >
          mvn -B package -pl aggregator -am
          -P 'individual,pre-merge'
          -Dbuildver=${{ matrix.spark-version }}
          -DskipTests
          -Dskip
          -Dmaven.javadoc.skip
          -Dmaven.scalastyle.skip=true
          -Drat.skip=true

  verify-all-modules-with-headSparkVersion:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2 # refs/pull/:prNumber/merge

      - name: Setup Java and Maven Env
        uses: actions/setup-java@v3
        with:
          distribution: adopt
          java-version: 8

      # includes RAT, code style and doc-gen checks of default shim
      - name: verify all modules with lowest-supported Spark version
        run: >
          mvn -B verify -P 'individual,pre-merge'
          -DskipTests
          -Dskip
          -Dmaven.javadoc.skip
