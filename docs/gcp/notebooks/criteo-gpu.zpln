{
  "paragraphs": [
    {
      "text": "import ml.dmlc.xgboost4j.scala.spark.{XGBoostClassificationModel, XGBoostClassifier}\nimport org.apache.spark.ml.evaluation.MulticlassClassificationEvaluator\nimport org.apache.spark.sql.{SparkSession, SQLContext}\nimport org.apache.spark.SparkConf\nimport org.apache.spark.sql.types.{DoubleType, FloatType, IntegerType, StructField, StructType}\nimport scala.util.Properties",
      "user": "anonymous",
      "dateUpdated": "2020-07-12T08:58:18+0000",
      "config": {
        "colWidth": 12,
        "fontSize": 9,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "import ml.dmlc.xgboost4j.scala.spark.{XGBoostClassificationModel, XGBoostClassifier}\nimport org.apache.spark.ml.evaluation.MulticlassClassificationEvaluator\nimport org.apache.spark.sql.{SparkSession, SQLContext}\nimport org.apache.spark.SparkConf\nimport org.apache.spark.sql.types.{DoubleType, FloatType, IntegerType, StructField, StructType}\nimport scala.util.Properties\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1594453014903_-1875681538",
      "id": "paragraph_1594453014903_-1875681538",
      "dateCreated": "2020-07-11T07:36:54+0000",
      "dateStarted": "2020-07-12T08:58:18+0000",
      "dateFinished": "2020-07-12T08:58:18+0000",
      "status": "FINISHED",
      "focus": true,
      "$$hashKey": "object:7454"
    },
    {
      "text": "val trainPath = \"gs://dataproc-nv-demo/criteo/train/\"\nval evalPath  = \"gs://dataproc-nv-demo/criteo/test/\"\nval transPath = \"gs://dataproc-nv-demo/criteo/test/\"\nval modelPath = \"gs://dataproc-nv-demo/criteo/model/criteo\"\n\n// val trainPath = \"hdfs:///criteo/train/\"\n// val evalPath  = \"hdfs:///criteo/test/\"\n// val transPath = \"hdfs:///criteo/test/\"\n// val modelPath = \"hdfs:///criteo/model/criteo\"",
      "user": "anonymous",
      "dateUpdated": "2020-07-12T08:58:18+0000",
      "config": {
        "colWidth": 12,
        "fontSize": 9,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "\u001b[1m\u001b[34mtrainPath\u001b[0m: \u001b[1m\u001b[32mString\u001b[0m = gs://dataproc-nv-demo/criteo/train/\n\u001b[1m\u001b[34mevalPath\u001b[0m: \u001b[1m\u001b[32mString\u001b[0m = gs://dataproc-nv-demo/criteo/test/\n\u001b[1m\u001b[34mtransPath\u001b[0m: \u001b[1m\u001b[32mString\u001b[0m = gs://dataproc-nv-demo/criteo/test/\n\u001b[1m\u001b[34mmodelPath\u001b[0m: \u001b[1m\u001b[32mString\u001b[0m = gs://dataproc-nv-demo/criteo/model/criteo\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1594453046354_374191065",
      "id": "paragraph_1594453046354_374191065",
      "dateCreated": "2020-07-11T07:37:26+0000",
      "dateStarted": "2020-07-12T08:58:18+0000",
      "dateFinished": "2020-07-12T08:58:19+0000",
      "status": "FINISHED",
      "$$hashKey": "object:7455"
    },
    {
      "text": "val conf = new SparkConf()\nconf.set(\"spark.executor.instances\", \"20\")\nconf.set(\"spark.executor.cores\", \"7\")\nconf.set(\"spark.task.cpus\", \"7\")\nconf.set(\"spark.executor.memory\", \"24g\")\nconf.set(\"spark.rapids.memory.pinnedPool.size\", \"2G\")\nconf.set(\"spark.executor.memoryOverhead\", \"16G\")\nconf.set(\"spark.executor.extraJavaOptions\", \"-Dai.rapids.cudf.prefer-pinned=true\")\nconf.set(\"spark.locality.wait\", \"0s\")\nconf.set(\"spark.sql.files.maxPartitionBytes\", \"512m\")\nconf.set(\"spark.executor.resource.gpu.amount\", \"1\")\nconf.set(\"spark.task.resource.gpu.amount\", \"1\")\nconf.set(\"spark.plugins\", \"com.nvidia.spark.SQLPlugin\")\nconf.set(\"spark.rapids.sql.hasNans\", \"false\")\nconf.set(\"spark.rapids.sql.batchSizeBytes\", \"512M\")\nconf.set(\"spark.rapids.sql.reader.batchSizeBytes\", \"768M\")\nconf.set(\"spark.rapids.sql.variableFloatAgg.enabled\", \"true\")\nconf.set(\"spark.rapids.memory.gpu.pooling.enabled\", \"false\")\n// conf.set(\"spark.rapids.memory.gpu.allocFraction\", \"0.1\")\nval spark = SparkSession.builder.appName(\"criteo-gpu\")\n                               .enableHiveSupport()\n                               .config(conf)\n                               .getOrCreate\nval reader = spark.read.option(\"header\", true)",
      "user": "anonymous",
      "dateUpdated": "2020-07-12T08:58:19+0000",
      "config": {
        "colWidth": 12,
        "fontSize": 9,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "\u001b[1m\u001b[34mconf\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.SparkConf\u001b[0m = org.apache.spark.SparkConf@2fb45f4e\n\u001b[1m\u001b[34mspark\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.sql.SparkSession\u001b[0m = org.apache.spark.sql.SparkSession@36aabe7c\n\u001b[1m\u001b[34mreader\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.sql.DataFrameReader\u001b[0m = org.apache.spark.sql.DataFrameReader@4b9a2b16\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1594534709505_1126750185",
      "id": "paragraph_1594534709505_1126750185",
      "dateCreated": "2020-07-12T06:18:29+0000",
      "dateStarted": "2020-07-12T08:58:19+0000",
      "dateFinished": "2020-07-12T08:58:27+0000",
      "status": "FINISHED",
      "$$hashKey": "object:7456"
    },
    {
      "text": "val trainSet = reader.parquet(trainPath)\nval evalSet  = reader.parquet(evalPath)\nval transSet = reader.parquet(transPath)",
      "user": "anonymous",
      "dateUpdated": "2020-07-12T08:58:28+0000",
      "config": {
        "colWidth": 12,
        "fontSize": 9,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "\u001b[1m\u001b[34mtrainSet\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.sql.DataFrame\u001b[0m = [_c0: int, _c1: double ... 38 more fields]\n\u001b[1m\u001b[34mevalSet\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.sql.DataFrame\u001b[0m = [_c0: int, _c1: double ... 38 more fields]\n\u001b[1m\u001b[34mtransSet\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.sql.DataFrame\u001b[0m = [_c0: int, _c1: double ... 38 more fields]\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1594526167768_-1585738381",
      "id": "paragraph_1594526167768_-1585738381",
      "dateCreated": "2020-07-12T03:56:07+0000",
      "dateStarted": "2020-07-12T08:58:28+0000",
      "dateFinished": "2020-07-12T08:58:53+0000",
      "status": "FINISHED",
      "$$hashKey": "object:7457"
    },
    {
      "text": "def getFeatureNames(length: Int): List[String] =\n    1.until(length).map(i => s\"_c$i\").toList\nval labelColName = \"_c0\"\nval featureNames = getFeatureNames(40)",
      "user": "anonymous",
      "dateUpdated": "2020-07-12T08:58:53+0000",
      "config": {
        "colWidth": 12,
        "fontSize": 9,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "\u001b[1m\u001b[34mgetFeatureNames\u001b[0m: \u001b[1m\u001b[32m(length: Int)List[String]\u001b[0m\n\u001b[1m\u001b[34mlabelColName\u001b[0m: \u001b[1m\u001b[32mString\u001b[0m = _c0\n\u001b[1m\u001b[34mfeatureNames\u001b[0m: \u001b[1m\u001b[32mList[String]\u001b[0m = List(_c1, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12, _c13, _c14, _c15, _c16, _c17, _c18, _c19, _c20, _c21, _c22, _c23, _c24, _c25, _c26, _c27, _c28, _c29, _c30, _c31, _c32, _c33, _c34, _c35, _c36, _c37, _c38, _c39)\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1594532641299_-1312937359",
      "id": "paragraph_1594532641299_-1312937359",
      "dateCreated": "2020-07-12T05:44:01+0000",
      "dateStarted": "2020-07-12T08:58:53+0000",
      "dateFinished": "2020-07-12T08:58:53+0000",
      "status": "FINISHED",
      "$$hashKey": "object:7458"
    },
    {
      "text": " val commParamMap = Map(\n    \"eval_metric\" -> \"logloss\",\n    \"eta\" -> 0.1,\n    \"gamma\" -> 0.1,\n    \"missing\" -> 0.0,\n    \"max_depth\" -> 10,\n    \"max_leaves\" -> 256,\n    \"objective\" -> \"binary:logistic\",\n    \"grow_policy\" -> \"depthwise\",\n    \"min_child_weight\" -> 30,\n    \"lambda\" -> 1,\n    \"scale_pos_weight\" -> 2,\n    \"subsample\" -> 1,\n    \"num_round\" -> 100)\nval xgbParamFinal = commParamMap ++ Map(\"tree_method\" -> \"gpu_hist\", \"num_workers\" -> 20, \"nthread\" ->7)",
      "user": "anonymous",
      "dateUpdated": "2020-07-12T08:58:53+0000",
      "config": {
        "colWidth": 12,
        "fontSize": 9,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "\u001b[1m\u001b[34mcommParamMap\u001b[0m: \u001b[1m\u001b[32mscala.collection.immutable.Map[String,Any]\u001b[0m = Map(min_child_weight -> 30, grow_policy -> depthwise, scale_pos_weight -> 2, subsample -> 1, lambda -> 1, max_depth -> 10, objective -> binary:logistic, eval_metric -> logloss, num_round -> 100, missing -> 0.0, eta -> 0.1, max_leaves -> 256, gamma -> 0.1)\n\u001b[1m\u001b[34mxgbParamFinal\u001b[0m: \u001b[1m\u001b[32mscala.collection.immutable.Map[String,Any]\u001b[0m = Map(min_child_weight -> 30, grow_policy -> depthwise, scale_pos_weight -> 2, num_workers -> 20, subsample -> 1, lambda -> 1, max_depth -> 10, objective -> binary:logistic, eval_metric -> logloss, num_round -> 100, missing -> 0.0, tree_method -> gpu_hist, eta -> 0.1, max_leaves -> 256, gamma -> 0.1, nthread -> 7)\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1594526282133_-1460763578",
      "id": "paragraph_1594526282133_-1460763578",
      "dateCreated": "2020-07-12T03:58:02+0000",
      "dateStarted": "2020-07-12T08:58:53+0000",
      "dateFinished": "2020-07-12T08:58:54+0000",
      "status": "FINISHED",
      "$$hashKey": "object:7459"
    },
    {
      "text": "val xgbClassifier = new XGBoostClassifier(xgbParamFinal)\n      .setLabelCol(labelColName)\n      // === diff ===\n      .setFeaturesCols(featureNames)\nxgbClassifier.setEvalSets(Map(\"eval\" -> evalSet))\n\n\ndef benchmark[R](phase: String)(block: => R): (R, Float) = {\n  val t0 = System.currentTimeMillis\n  val result = block // call-by-name\n  val t1 = System.currentTimeMillis\n  println(\"Elapsed time [\" + phase + \"]: \" + ((t1 - t0).toFloat / 1000) + \"s\")\n  (result, (t1 - t0).toFloat / 1000)\n}\n\n // Start training\nprintln(\"\\n------ Training ------\")\nval (xgbClassificationModel, _) = benchmark(\"train\") {\n  xgbClassifier.fit(trainSet)\n}\n",
      "user": "anonymous",
      "dateUpdated": "2020-07-12T08:58:54+0000",
      "config": {
        "colWidth": 12,
        "fontSize": 9,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "\n------ Training ------\nTracker started, with env={DMLC_NUM_SERVER=0, DMLC_TRACKER_URI=10.164.0.17, DMLC_TRACKER_PORT=9091, DMLC_NUM_WORKER=20}\nElapsed time [train]: 778.858s\n\u001b[1m\u001b[34mxgbClassifier\u001b[0m: \u001b[1m\u001b[32mml.dmlc.xgboost4j.scala.spark.XGBoostClassifier\u001b[0m = xgbc_540ae9f40502\n\u001b[1m\u001b[34mbenchmark\u001b[0m: \u001b[1m\u001b[32m[R](phase: String)(block: => R)(R, Float)\u001b[0m\n\u001b[1m\u001b[34mxgbClassificationModel\u001b[0m: \u001b[1m\u001b[32mml.dmlc.xgboost4j.scala.spark.XGBoostClassificationModel\u001b[0m = xgbc_540ae9f40502\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1594528050185_825425675",
      "id": "paragraph_1594528050185_825425675",
      "dateCreated": "2020-07-12T04:27:30+0000",
      "dateStarted": "2020-07-12T08:58:54+0000",
      "dateFinished": "2020-07-12T09:11:53+0000",
      "status": "FINISHED",
      "$$hashKey": "object:7460"
    },
    {
      "text": "println(\"\\n------ Transforming ------\")\nval (results, _) = benchmark(\"transform\") {\n  val ret = xgbClassificationModel.transform(transSet).cache()\n  ret\n}\nz.show(results.select(labelColName,\"rawPrediction\",\"probability\",\"prediction\").limit(10))\n\nprintln(\"\\n------Accuracy of Evaluation------\")\nval evaluator = new MulticlassClassificationEvaluator().setLabelCol(labelColName)\nval accuracy = evaluator.evaluate(results)\nprintln(accuracy)",
      "user": "anonymous",
      "dateUpdated": "2020-07-12T09:11:53+0000",
      "config": {
        "colWidth": 12,
        "fontSize": 9,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1594526454960_-410627868",
      "id": "paragraph_1594526454960_-410627868",
      "dateCreated": "2020-07-12T04:00:54+0000",
      "dateStarted": "2020-07-12T09:11:53+0000",
      "dateFinished": "2020-07-12T09:13:44+0000",
      "status": "FINISHED",
      "$$hashKey": "object:7461",
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "\n------ Transforming ------\nElapsed time [transform]: 0.18s\n"
          },
          {
            "type": "TABLE",
            "data": "_c0\trawPrediction\tprobability\tprediction\n0\t[4.052707195281982,-4.052707195281982]\t[0.9829214699566364,0.01707853004336357]\t0.0\n0\t[1.7900054454803467,-1.7900054454803467]\t[0.8569279313087463,0.14307206869125366]\t0.0\n0\t[3.254337787628174,-3.254337787628174]\t[0.9628286734223366,0.03717132657766342]\t0.0\n0\t[3.314526081085205,-3.314526081085205]\t[0.9649237915873528,0.03507620841264725]\t0.0\n0\t[2.400146007537842,-2.400146007537842]\t[0.9168384373188019,0.08316156268119812]\t0.0\n0\t[3.645124912261963,-3.645124912261963]\t[0.9745466466993093,0.02545335330069065]\t0.0\n0\t[4.466676235198975,-4.466676235198975]\t[0.988644989207387,0.01135501079261303]\t0.0\n0\t[4.063865661621094,-4.063865661621094]\t[0.9831077810376883,0.016892218962311745]\t0.0\n0\t[2.2824320793151855,-2.2824320793151855]\t[0.9074115753173828,0.09258842468261719]\t0.0\n0\t[2.739168882369995,-2.739168882369995]\t[0.93929872661829,0.06070127338171005]\t0.0\n"
          },
          {
            "type": "TEXT",
            "data": "\n------Accuracy of Evaluation------\n0.9496268137278149\n\u001b[1m\u001b[34mresults\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.sql.Dataset[org.apache.spark.sql.Row]\u001b[0m = [_c0: int, _c1: double ... 41 more fields]\n\u001b[1m\u001b[34mevaluator\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.ml.evaluation.MulticlassClassificationEvaluator\u001b[0m = MulticlassClassificationEvaluator: uid=mcEval_bfa7bc01b628, metricName=f1, metricLabel=0.0, beta=1.0, eps=1.0E-15\n\u001b[1m\u001b[34maccuracy\u001b[0m: \u001b[1m\u001b[32mDouble\u001b[0m = 0.9496268137278149\n"
          }
        ]
      }
    },
    {
      "text": "xgbClassificationModel.write.overwrite.save(modelPath)\n\nval modelFromDisk = XGBoostClassificationModel.load(modelPath)\n\nval (results2, _) = benchmark(\"transform2\") {\n  modelFromDisk.transform(transSet)\n}\nz.show(results2.limit(2))",
      "user": "anonymous",
      "dateUpdated": "2020-07-12T09:13:44+0000",
      "config": {
        "colWidth": 12,
        "fontSize": 9,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "Elapsed time [transform2]: 0.075s\n"
          },
          {
            "type": "TABLE",
            "data": "_c0\t_c1\t_c2\t_c3\t_c4\t_c5\t_c6\t_c7\t_c8\t_c9\t_c10\t_c11\t_c12\t_c13\t_c14\t_c15\t_c16\t_c17\t_c18\t_c19\t_c20\t_c21\t_c22\t_c23\t_c24\t_c25\t_c26\t_c27\t_c28\t_c29\t_c30\t_c31\t_c32\t_c33\t_c34\t_c35\t_c36\t_c37\t_c38\t_c39\trawPrediction\tprobability\tprediction\n0\t3.7612001156935624\t3.8066624897703196\t1.6094379124341003\t4.04305126783455\t1.791759469228055\t1.0986122886681096\t1.0986122886681096\t1.6094379124341003\t2.9444389791664403\t1.0986122886681096\t1.3862943611198906\t8.400884069015854\t1.9459101490553132\t276585\t9\t84\t3\t1\t1\t128\t6\t1\t15140\t100\t83\t2\t7\t4\t3\t2\t19\t1\t274727\t96\t69765\t59\t121\t1\t1\t[4.052707195281982,-4.052707195281982]\t[0.9829214699566364,0.01707853004336357]\t0.0\n0\t0.0\t3.295836866004329\t0.0\t3.4011973816621555\t2.0794415416798357\t0.0\t1.0986122886681096\t1.6094379124341003\t1.3862943611198906\t0.0\t1.791759469228055\t9.217018026729423\t0.0\t195\t14\t1\t181\t26\t1\t2\t6\t2\t229\t3\t561\t1\t2\t4\t3\t3\t1\t1\t186\t217\t205\t388\t1\t1\t3\t[1.7900054454803467,-1.7900054454803467]\t[0.8569279313087463,0.14307206869125366]\t0.0\n"
          },
          {
            "type": "TEXT",
            "data": "\u001b[1m\u001b[34mmodelFromDisk\u001b[0m: \u001b[1m\u001b[32mml.dmlc.xgboost4j.scala.spark.XGBoostClassificationModel\u001b[0m = xgbc_540ae9f40502\n\u001b[1m\u001b[34mresults2\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.sql.DataFrame\u001b[0m = [_c0: int, _c1: double ... 41 more fields]\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1594528146985_-694358911",
      "id": "paragraph_1594528146985_-694358911",
      "dateCreated": "2020-07-12T04:29:06+0000",
      "dateStarted": "2020-07-12T09:13:44+0000",
      "dateFinished": "2020-07-12T09:13:49+0000",
      "status": "FINISHED",
      "$$hashKey": "object:7462"
    },
    {
      "user": "anonymous",
      "config": {
        "colWidth": 12,
        "fontSize": 9,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1594526882403_-1844899984",
      "id": "paragraph_1594526882403_-1844899984",
      "dateCreated": "2020-07-12T04:08:02+0000",
      "status": "FINISHED",
      "$$hashKey": "object:7463",
      "dateUpdated": "2020-07-12T09:13:49+0000"
    }
  ],
  "name": "Criteo-XGBoost4j",
  "id": "2FEB4TS4H",
  "defaultInterpreterGroup": "spark",
  "version": "0.9.0-preview1",
  "noteParams": {},
  "noteForms": {},
  "angularObjects": {},
  "config": {
    "isZeppelinNotebookCronEnable": false,
    "looknfeel": "default",
    "personalizedMode": "false"
  },
  "info": {
    "isRunning": true
  },
  "path": "/zeppelin/Criteo-XGBoost4j"
}