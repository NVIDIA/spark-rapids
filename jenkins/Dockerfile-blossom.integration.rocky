#
# Copyright (c) 2022-2024, NVIDIA CORPORATION. All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

###
# https://hub.docker.com/r/nvidia/cuda/tags?name=rockylinux
# Arguments:
#    CUDA_VER=11.0+
#    ROCKY_VER=8
#    CUDF_VER=<cudf-py version>
#    URM_URL=<maven repo url>
###

ARG CUDA_VER=11.8.0
ARG ROCKY_VER=8
FROM nvidia/cuda:${CUDA_VER}-runtime-rockylinux${ROCKY_VER}
ARG CUDA_VER
ARG CUDF_VER
ARG URM_URL

# Install jdk-8, jdk-11, maven, docker image
RUN yum update -y && \
    yum install epel-release -y && \
    yum install -y java-1.8.0-openjdk-devel java-11-openjdk-devel java-17-openjdk-devel wget expect rsync zip unzip procps

RUN yum install -y gcc openssl-devel bzip2-devel libffi-devel zlib-devel make
ARG PY_VER=3.10.15
RUN wget -q https://www.python.org/ftp/python/${PY_VER}/Python-${PY_VER}.tgz && tar xzf Python-${PY_VER}.tgz
RUN cd /Python-${PY_VER} && ./configure && make -j 4 \
    && make altinstall && rm -rf /Python-${PY_VER} Python-${PY_VER}.tgz
RUN ln -s /usr/local/bin/python3.10 /usr/bin/python

RUN wget -q https://bootstrap.pypa.io/get-pip.py && python get-pip.py && rm -f get-pip.py
# install pytest plugins for xdist parallel run
RUN python -m pip install findspark pytest-xdist pytest-order fastparquet==2024.5.0 pytest requests sre_yield
RUN export CUDA_V=`echo ${CUDA_VER} | cut -d '.' -f 1` && pip install \
        --extra-index-url=https://pypi.anaconda.org/rapidsai-wheels-nightly/simple \
        "cudf-cu${CUDA_V}>=${CUDF_VER}.0a0,<=${CUDF_VER}"

# The plugin: net.alchim31.maven requires a higher mvn version.
ENV MAVEN_HOME "/usr/local/apache-maven-3.6.3"
RUN wget -q ${URM_URL}/org/apache/maven/apache-maven/3.6.3/apache-maven-3.6.3-bin.tar.gz -P /usr/local && \
    tar xzvf $MAVEN_HOME-bin.tar.gz -C /usr/local && \
    rm -f $MAVEN_HOME-bin.tar.gz

# Set default java as 1.8.0
ENV JAVA_HOME "/usr/lib/jvm/java-1.8.0-openjdk"
