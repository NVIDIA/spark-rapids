20c20
< import com.nvidia.spark.rapids.{DataWritingCommandRule, ExprChecks, ExprMeta, ExprRule, GpuExpression, GpuOverrides, HiveProvider, OptimizedCreateHiveTableAsSelectCommandMeta, RapidsConf, RepeatingParamCheck, TypeSig}
---
> import com.nvidia.spark.rapids.{DataWritingCommandRule, ExprChecks, ExprMeta, ExprRule, GpuOverrides, HiveProvider, OptimizedCreateHiveTableAsSelectCommandMeta, RapidsConf, RepeatingParamCheck, TypeSig}
34c34
<       DataWritingCommandRule[_ <: DataWritingCommand]] = Seq (
---
>     DataWritingCommandRule[_ <: DataWritingCommand]] = Seq (
41c41,42
<    * Builds the expression rules that are specific to spark-hive Catalyst nodes.
---
>    * Builds the rules that are specific to spark-hive Catalyst nodes. This will return an empty
>    * mapping if spark-hive is unavailable.
65,84d65
< 
<           override def convertToGpu(): GpuExpression = {
<             opRapidsFunc.map { _ =>
<               // We use the original HiveGenericUDF `deterministic` method as a proxy
<               // for simplicity.
<               GpuHiveSimpleUDF(
<                 a.name,
<                 a.funcWrapper,
<                 childExprs.map(_.convertToGpu()),
<                 a.dataType,
<                 a.deterministic)
<             }.getOrElse {
<               // This `require` is just for double check.
<               require(conf.isCpuBasedUDFEnabled)
<               GpuRowBasedHiveSimpleUDF(
<                 a.name,
<                 a.funcWrapper,
<                 childExprs.map(_.convertToGpu()))
<             }
<           }
104,124d84
<             }
<           }
< 
<           override def convertToGpu(): GpuExpression = {
<             opRapidsFunc.map { _ =>
<               // We use the original HiveGenericUDF `deterministic` method as a proxy
<               // for simplicity.
<               GpuHiveGenericUDF(
<                 a.name,
<                 a.funcWrapper,
<                 childExprs.map(_.convertToGpu()),
<                 a.dataType,
<                 a.deterministic,
<                 a.foldable)
<             }.getOrElse {
<               // This `require` is just for double check.
<               require(conf.isCpuBasedUDFEnabled)
<               GpuRowBasedHiveGenericUDF(
<                 a.name,
<                 a.funcWrapper,
<                 childExprs.map(_.convertToGpu()))
