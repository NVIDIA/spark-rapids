2c2
<  * Copyright (c) 2022, NVIDIA CORPORATION.
---
>  * Copyright (c) 2020-2022, NVIDIA CORPORATION.
21a22
> import ai.rapids.cudf.DType
24d24
< import org.apache.spark.{SPARK_BUILD_USER, SPARK_VERSION}
168c168
<     private val maxAllowedDecimalPrecision: Int = GpuOverrides.DECIMAL64_MAX_PRECISION,
---
>     private val maxAllowedDecimalPrecision: Int = DType.DECIMAL64_MAX_PRECISION,
270c270
<       meta: RapidsMeta[_, _],
---
>       meta: RapidsMeta[_, _, _],
586c586
<   val DECIMAL_64: TypeSig = decimal(GpuOverrides.DECIMAL64_MAX_PRECISION)
---
>   val DECIMAL_64: TypeSig = decimal(DType.DECIMAL64_MAX_PRECISION)
593c593
<   val DECIMAL_128: TypeSig = decimal(GpuOverrides.DECIMAL128_MAX_PRECISION)
---
>   val DECIMAL_128: TypeSig = decimal(DType.DECIMAL128_MAX_PRECISION)
733c733
<   def tag(meta: RapidsMeta[_, _]): Unit
---
>   def tag(meta: RapidsMeta[_, _, _]): Unit
746c746
<     meta: RapidsMeta[_, _],
---
>     meta: RapidsMeta[_, _, _],
803c803
<   override def tag(rapidsMeta: RapidsMeta[_, _]): Unit = {
---
>   override def tag(rapidsMeta: RapidsMeta[_, _, _]): Unit = {
807c807
<   private[this] def tagBase(rapidsMeta: RapidsMeta[_, _], willNotWork: String => Unit): Unit = {
---
>   private[this] def tagBase(rapidsMeta: RapidsMeta[_, _, _], willNotWork: String => Unit): Unit = {
865c865
<   def tag(meta: RapidsMeta[_, _],
---
>   def tag(meta: RapidsMeta[_, _, _],
876c876
<   override def tag(meta: RapidsMeta[_, _]): Unit =
---
>   override def tag(meta: RapidsMeta[_, _, _]): Unit =
902c902
<   def tag(meta: RapidsMeta[_, _],
---
>   def tag(meta: RapidsMeta[_, _, _],
923c923
<   override def tag(rapidsMeta: RapidsMeta[_, _]): Unit = {
---
>   override def tag(rapidsMeta: RapidsMeta[_, _, _]): Unit = {
998c998
<   override def tag(meta: RapidsMeta[_, _]): Unit = {
---
>   override def tag(meta: RapidsMeta[_, _, _]): Unit = {
1050c1050
<   override def tag(meta: RapidsMeta[_, _]): Unit = {
---
>   override def tag(meta: RapidsMeta[_, _, _]): Unit = {
1093c1093
<   override def tag(meta: RapidsMeta[_, _]): Unit = {
---
>   override def tag(meta: RapidsMeta[_, _, _]): Unit = {
1143c1143
<   override def tag(meta: RapidsMeta[_, _]): Unit = {
---
>   override def tag(meta: RapidsMeta[_, _, _]): Unit = {
1189c1189
<   override def tag(meta: RapidsMeta[_, _]): Unit = {
---
>   override def tag(meta: RapidsMeta[_, _, _]): Unit = {
1225c1225
<   override def tag(meta: RapidsMeta[_, _]): Unit = {
---
>   override def tag(meta: RapidsMeta[_, _, _]): Unit = {
1376c1376
<   override def tag(meta: RapidsMeta[_, _]): Unit = {
---
>   override def tag(meta: RapidsMeta[_, _, _]): Unit = {
1386c1386
<   private[this] def tagBase(meta: RapidsMeta[_, _], willNotWork: String => Unit): Unit = {
---
>   private[this] def tagBase(meta: RapidsMeta[_, _, _], willNotWork: String => Unit): Unit = {
1721,1729d1720
<   def getSparkVersion: String = {
<     // hack for databricks, try to find something more reliable?
<     if (SPARK_BUILD_USER.equals("Databricks")) {
<       SPARK_VERSION + "-databricks"
<     } else {
<       SPARK_VERSION
<     }
<   }
< 
1744c1735
<     println(s"against version ${getSparkVersion} of Spark. Most of this should still")
---
>     println(s"against version ${ShimLoader.getSparkVersion} of Spark. Most of this should still")
1852c1843
<         val allData = allSupportedTypes.toList.map { t =>
---
>         val allData = allSupportedTypes.map { t =>
1935c1926
<         val allData = allSupportedTypes.toList.map { t =>
---
>         val allData = allSupportedTypes.map { t =>
2039c2030
<         val allData = allSupportedTypes.toList.map { t =>
---
>         val allData = allSupportedTypes.map { t =>
