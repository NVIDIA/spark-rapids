2c2
<  * Copyright (c) 2022, NVIDIA CORPORATION.
---
>  * Copyright (c) 2019-2022, NVIDIA CORPORATION.
17,20c17
< package com.nvidia.spark.rapids.shims.v2
< 
< import com.nvidia.spark.rapids._
< import com.nvidia.spark.rapids.shims.v2._
---
> package com.nvidia.spark.rapids
29c26
<     parent: Option[RapidsMeta[_, _]],
---
>     parent: Option[RapidsMeta[_, _, _]],
76a74,97
>   }
> 
>   override def convertToGpu(): GpuExec = {
>     val condition = conditionMeta.map(_.convertToGpu())
>     val (joinCondition, filterCondition) = if (conditionMeta.forall(_.canThisBeAst)) {
>       (condition, None)
>     } else {
>       (None, condition)
>     }
>     val Seq(left, right) = childPlans.map(_.convertIfNeeded())
>     val joinExec = GpuShuffledHashJoinExec(
>       leftKeys.map(_.convertToGpu()),
>       rightKeys.map(_.convertToGpu()),
>       join.joinType,
>       buildSide,
>       joinCondition,
>       left,
>       right,
>       join.isSkewJoin)(
>       join.leftKeys,
>       join.rightKeys)
>     // For inner joins we can apply a post-join condition for any conditions that cannot be
>     // evaluated directly in a mixed join that leverages a cudf AST expression
>     filterCondition.map(c => GpuFilterExec(c, joinExec)).getOrElse(joinExec)
