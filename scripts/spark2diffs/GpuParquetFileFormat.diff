3c3
<       meta: RapidsMeta[_, _],
---
>       meta: RapidsMeta[_, _, _],
6c6
<       schema: StructType): Unit = {
---
>       schema: StructType): Option[GpuParquetFileFormat] = {
8a9
> 
73,77c74
<     // Spark 2.x doesn't have the rebase mode because the changes of calendar type weren't made
<     // so just skip the checks, since this is just explain only it would depend on how
<     // they set when they get to 3.x. The default in 3.x is EXCEPTION which would be good
<     // for us.
<     /*
---
> 
99c96,101
<     */
---
> 
>     if (meta.canThisBeReplaced) {
>       Some(new GpuParquetFileFormat)
>     } else {
>       None
>     }
102,103c104
<   // SPARK 2.X  - just return String rather then CompressionType
<   def parseCompressionType(compressionType: String): Option[String] = {
---
>   def parseCompressionType(compressionType: String): Option[CompressionType] = {
105,106c106,107
<       case "NONE" | "UNCOMPRESSED" => Some("NONE")
<       case "SNAPPY" => Some("SNAPPY")
---
>       case "NONE" | "UNCOMPRESSED" => Some(CompressionType.NONE)
>       case "SNAPPY" => Some(CompressionType.SNAPPY)
