<?xml version="1.0" encoding="UTF-8"?>
<!--
  Copyright (c) 2020-2023, NVIDIA CORPORATION.

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>com.nvidia</groupId>
        <artifactId>rapids-4-spark-shim-deps-parent_2.12</artifactId>
        <version>23.12.0-SNAPSHOT</version>
        <relativePath>../shim-deps/pom.xml</relativePath>
    </parent>
    <artifactId>rapids-4-spark-integration-tests_2.12</artifactId>
    <version>23.12.0-SNAPSHOT</version>
    <properties>
        <rapids.module>integration_tests</rapids.module>
        <target.classifier/>
        <rapids.default.jar.excludePattern>**/*</rapids.default.jar.excludePattern>
        <rapids.shim.jar.phase>package</rapids.shim.jar.phase>
    </properties>
    <dependencies>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jul-to-slf4j</artifactId>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jcl-over-slf4j</artifactId>
            <!-- runtime scope is appropriate, but causes SBT build problems -->
        </dependency>
        <dependency>
            <groupId>org.scala-lang</groupId>
            <artifactId>scala-library</artifactId>
        </dependency>
        <dependency>
            <groupId>org.scalatest</groupId>
            <artifactId>scalatest_${scala.binary.version}</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.nvidia</groupId>
            <artifactId>rapids-4-spark_${scala.binary.version}</artifactId>
            <version>${project.version}</version>
            <classifier>${jni.classifier}</classifier>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.spark</groupId>
            <artifactId>spark-sql_${scala.binary.version}</artifactId>
            <version>${spark.test.version}</version>
        </dependency>
        <dependency>
            <!-- for hive udf test cases -->
            <groupId>org.apache.spark</groupId>
            <artifactId>spark-hive_${scala.binary.version}</artifactId>
        </dependency>
        <!-- https://mvnrepository.com/artifact/com.github.scopt/scopt -->
        <dependency>
            <groupId>com.github.scopt</groupId>
            <artifactId>scopt_2.12</artifactId>
            <version>4.1.0</version>
        </dependency>
    </dependencies>
    <build>
        <plugins>
            <plugin>
                <artifactId>maven-assembly-plugin</artifactId>
                <configuration>
                    <finalName>rapids-4-spark-integration-tests_${scala.binary.version}-${project.version}-${spark.version.classifier}</finalName>
                    <descriptorRefs>
                        <descriptorRef>jar-with-dependencies</descriptorRef>
                    </descriptorRefs>
                    <descriptors>
                        <descriptor>${spark.rapids.source.basedir}/${rapids.module}/src/assembly/bin.xml</descriptor>
                    </descriptors>
                </configuration>
                <executions>
                    <execution>
                        <id>pytest-packaging</id>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!-- disable surefire as we are using scalatest only -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <skipTests>true</skipTests>
                </configuration>
            </plugin>
            <plugin>
                <groupId>net.alchim31.maven</groupId>
                <artifactId>scala-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.scalatest</groupId>
                <artifactId>scalatest-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-clean-plugin</artifactId>
                <version>${maven.clean.plugin.version}</version>
                <executions>
                    <execution>
                        <id>clean-copy</id>
                        <phase>package</phase>
                        <goals>
                            <goal>clean</goal>
                        </goals>
                        <configuration>
                            <excludeDefaultDirectories>true</excludeDefaultDirectories>
                            <filesets>
                                <filesets>
                                    <directory>target/dependency</directory>
                                    <includes>
                                        <include>parquet-hadoop*.jar</include>
                                        <include>spark-avro*.jar</include>
                                    </includes>
                                </filesets>
                            </filesets>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy</goal>
                        </goals>
                        <configuration>
                            <useBaseVersion>true</useBaseVersion>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>org.apache.spark</groupId>
                                    <artifactId>spark-avro_${scala.binary.version}</artifactId>
                                    <version>${spark.version}</version>
                                </artifactItem>
                                <artifactItem>
                                    <groupId>org.apache.parquet</groupId>
                                    <artifactId>parquet-hadoop</artifactId>
                                    <version>${parquet.hadoop.version}</version>
                                    <classifier>tests</classifier>
                                </artifactItem>
                            </artifactItems>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.rat</groupId>
                <artifactId>apache-rat-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>run pyspark tests</id>
                        <phase>verify</phase><!--run after packageing and collecting dependencies-->
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>${spark.rapids.source.basedir}/${rapids.module}/run_pyspark_from_build.sh</executable>
                            <workingDirectory>${spark.rapids.source.basedir}</workingDirectory>
                            <environmentVariables>
                                <SKIP_TESTS>${skipTests}</SKIP_TESTS>
                                <TEST>${test}</TEST>
                                <COVERAGE_SUBMIT_FLAGS>${argLine}</COVERAGE_SUBMIT_FLAGS>
                                <TEST_TAGS>${pytest.TEST_TAGS}</TEST_TAGS>
                                <TEST_PARALLEL>${pytest.TEST_PARALLEL}</TEST_PARALLEL>
                                <TEST_TYPE>${pytest.TEST_TYPE}</TEST_TYPE>
                            </environmentVariables>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>

        <resources>
            <resource>
                <!-- Include the properties file to provide the build information. -->
                <directory>${project.build.directory}/extra-resources</directory>
            </resource>
        </resources>
    </build>
</project>
