; Copyright (c) 2020-2022, NVIDIA CORPORATION.
;
; Licensed under the Apache License, Version 2.0 (the "License");
; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     http://www.apache.org/licenses/LICENSE-2.0
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS,
; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
; See the License for the specific language governing permissions and
; limitations under the License.

[pytest]
markers =
    allow_non_gpu_databricks(any, [ops]): Allow the test to run anything not on the GPU in Databricks environment
    allow_non_gpu(any, [ops]): Allow the test to run anything not on the GPU
    approximate_float(rel, abs): float calculation is approximate instead of exact
    ignore_order(local): Ignores the order of the result in asserts. If local is true the results are sorted in python instead of using spark.
    incompat: Enable incompat operators
    limit(num_rows): Limit the number of rows that will be check in a result
    qarun: Mark qa test
    cudf_udf: Mark udf cudf test
    validate_execs_in_gpu_plan([execs]): Exec class names to validate they exist in the GPU plan.
    shuffle_test: Mark to include test in the RAPIDS Shuffle Manager
    premerge_ci_1: Mark test that will run in first k8s pod in case of parallel build premerge job
    nightly_resource_consuming_test: tests either time-consuming or mem-consuming, we split them into cases
    nightly_gpu_mem_consuming_case: case in nightly_resource_consuming_test that consume much more GPU memory than normal cases
    nightly_host_mem_consuming_case: case in nightly_resource_consuming_test that consume much more host memory than normal cases
    fuzz_test: Mark fuzz tests
    iceberg: Mark a test that requires Iceberg has been configured, skipping if tests are not configured for Iceberg
filterwarnings =
    ignore:.*pytest.mark.order.*:_pytest.warning_types.PytestUnknownMarkWarning
