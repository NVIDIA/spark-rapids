<?xml version="1.0" encoding="UTF-8"?>
<!--
  Copyright (c) 2021-2022, NVIDIA CORPORATION.

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>com.nvidia</groupId>
        <artifactId>rapids-4-spark-parent</artifactId>
        <version>23.02.0-SNAPSHOT</version>
    </parent>
    <groupId>com.nvidia</groupId>
    <artifactId>rapids-4-spark-tools_2.12</artifactId>
    <name>RAPIDS Accelerator for Apache Spark tools</name>
    <description>RAPIDS Accelerator for Apache Spark tools</description>
    <version>23.02.0-SNAPSHOT</version>
    <packaging>jar</packaging>

    <properties>
        <hadoop.version>3.3.4</hadoop.version>
        <spark.version>${spark311.version}</spark.version>
        <spark.test.version>${spark311.version}</spark.test.version>
        <spark.version.classifier>spark311</spark.version.classifier>
        <target.classifier>spark311</target.classifier>
        <ui.cache.dir>${project.build.directory}/ui-dependencies-cache</ui.cache.dir>
        <ui.resources.relative>src/main/resources/ui</ui.resources.relative>
        <ui.resources.dir>${project.basedir}/${ui.resources.relative}</ui.resources.dir>
        <ui.resources.external.folder>assets</ui.resources.external.folder>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.scala-lang</groupId>
            <artifactId>scala-library</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.spark</groupId>
            <artifactId>spark-sql_${scala.binary.version}</artifactId>
            <version>${spark.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.spark</groupId>
            <artifactId>spark-core_${scala.binary.version}</artifactId>
            <version>${spark.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.hadoop</groupId>
            <artifactId>hadoop-client</artifactId>
            <version>${hadoop.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.hadoop</groupId>
            <artifactId>hadoop-aws</artifactId>
            <version>${hadoop.version}</version>
        </dependency>
        <dependency>
            <groupId>org.rogach</groupId>
            <artifactId>scallop_${scala.binary.version}</artifactId>
        </dependency>
        <dependency>
            <groupId>org.scalatest</groupId>
            <artifactId>scalatest_${scala.binary.version}</artifactId>
            <scope>test</scope>
        </dependency>
        <!-- Required for processing yaml files in AutoTuner -->
        <dependency>
            <groupId>org.yaml</groupId>
            <artifactId>snakeyaml</artifactId>
            <version>1.32</version>
        </dependency>
    </dependencies>

    <build>
        <resources>
            <resource>
              <directory>${project.basedir}/src/main/resources</directory>
            </resource>
            <resource>
                <directory>${project.basedir}/..</directory>
                <targetPath>META-INF</targetPath>
                <includes>
                    <!-- The NOTICE will be taken care of by the antrun task below -->
                    <include>LICENSE</include>
                </includes>
            </resource>
        </resources>
        <plugins>
            <plugin>
                <groupId>org.scalatest</groupId>
                <artifactId>scalatest-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                        <configuration>
                            <minimizeJar>true</minimizeJar>
                            <artifactSet>
                                <includes>
                                    <include>org.rogach:scallop_${scala.binary.version}</include>
                                </includes>
                            </artifactSet>
                            <filters>
                                <filter>
                                    <artifact>*:*</artifact>
                                    <excludes>
                                        <exclude>META-INF/*.MF</exclude>
                                        <exclude>META-INF/*.SF</exclude>
                                        <exclude>META-INF/*.DSA</exclude>
                                        <exclude>META-INF/*.RSA</exclude>
                                    </excludes>
                                </filter>
                            </filters>
                            <transformers>
                                <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                                    <mainClass>com.nvidia.spark.rapids.tool.profiling.ProfileMain</mainClass>
                                </transformer>
                            </transformers>
                            <createDependencyReducedPom>true</createDependencyReducedPom>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.rat</groupId>
                <artifactId>apache-rat-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>net.alchim31.maven</groupId>
                <artifactId>scala-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <executions>
                    <execution>
                        <id>download-ui-dependencies</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target>
                                <property name="project.basedir" value="${project.basedir}"/>
                                <property name="project.build.directory"
                                          value="${project.build.directory}"/>
                                <property name="project.cache.dir" value="${ui.cache.dir}"/>
                                <property name="project.ui.root" value="${ui.resources.dir}"/>
                                <property name="project.ui.output"
                                          value="${ui.resources.dir}/${ui.resources.external.folder}"/>
                                <property name="lib.bootstrap.url"
                                          value="https://github.com/twbs/bootstrap/releases/download/v4.6.1/bootstrap-4.6.1-dist.zip"/>
                                <property name="lib.bootstrap.dir" value="bootstrap"/>
                                <property name="lib.jquery.dir" value="jquery"/>
                                <property name="lib.jquery.url"
                                          value="https://github.com/jquery/jquery/archive/refs/tags/3.6.0.zip"/>
                                <property name="lib.mustache.dir" value="mustache-js"/>
                                <property name="lib.mustache.url"
                                          value="https://github.com/janl/mustache.js/archive/refs/tags/v4.1.0.zip"/>
                                <property name="lib.spur.dir" value="spur"/>
                                <property name="lib.spur.url"
                                          value="https://github.com/HackerThemes/spur-template/archive/refs/heads/master.zip"/>
                                <property name="lib.datatables.url.domain"
                                          value="https://cdn.datatables.net"/>
                                <property name="lib.datatables.dir" value="datatables"/>
                                <ant antfile="${project.basedir}/prepare-ui-libraries.xml"></ant>
                            </target>
                        </configuration>
                    </execution>
                    <execution>
                        <id>copy-notice</id>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <phase>process-resources</phase>
                        <configuration>
                            <target>
                                <!-- copy NOTICE-binary to NOTICE -->
                                <copy
                                        todir="${project.build.directory}/classes/META-INF/"
                                        verbose="true">
                                    <fileset dir="${project.basedir}/..">
                                        <include name="NOTICE-binary"/>
                                    </fileset>
                                    <mapper type="glob" from="*-binary" to="*"/>
                                </copy>
                            </target>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <!-- clean up the qual-ui dependencies from the resources -->
                <artifactId>maven-clean-plugin</artifactId>
                <version>${maven.clean.plugin.version}</version>
                <executions>
                    <execution>
                        <id>clean-qual-ui-dependencies</id>
                        <phase>clean</phase>
                        <goals>
                            <goal>clean</goal>
                        </goals>
                        <configuration>
                            <filesets>
                                <fileset>
                                    <directory>${ui.resources.relative}</directory>
                                    <includes>
                                        <include>${ui.resources.external.folder}/</include>
                                    </includes>
                                </fileset>
                            </filesets>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
