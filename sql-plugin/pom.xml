<?xml version="1.0" encoding="UTF-8"?>
<!--
  Copyright (c) 2020-2021, NVIDIA CORPORATION.

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>com.nvidia</groupId>
        <artifactId>rapids-4-spark-parent</artifactId>
        <version>21.10.0-SNAPSHOT</version>
    </parent>
    <artifactId>rapids-4-spark-sql_2.12</artifactId>
    <name>RAPIDS Accelerator for Apache Spark SQL Plugin</name>
    <description>The RAPIDS SQL plugin for Apache Spark</description>
    <version>21.10.0-SNAPSHOT</version>

    <dependencies>
        <dependency>
            <groupId>ai.rapids</groupId>
            <artifactId>cudf</artifactId>
            <classifier>${cuda.version}</classifier>
        </dependency>
        <dependency>
            <groupId>com.google.flatbuffers</groupId>
            <artifactId>flatbuffers-java</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.scala-lang</groupId>
            <artifactId>scala-library</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.spark</groupId>
            <artifactId>spark-hive_${scala.binary.version}</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.spark</groupId>
            <artifactId>spark-sql_${scala.binary.version}</artifactId>
        </dependency>
        <dependency>
          <groupId>org.apache.orc</groupId>
          <artifactId>orc-core</artifactId>
          <classifier>${orc.classifier}</classifier>
          <exclusions>
            <exclusion>
              <groupId>org.slf4j</groupId>
              <artifactId>slf4j-api</artifactId>
            </exclusion>
          </exclusions>
        </dependency>
        <dependency>
          <groupId>org.apache.orc</groupId>
          <artifactId>orc-mapreduce</artifactId>
          <classifier>${orc.classifier}</classifier>
          <exclusions>
            <exclusion>
              <groupId>com.google.code.findbugs</groupId>
              <artifactId>jsr305</artifactId>
            </exclusion>
          </exclusions>
        </dependency>
        <dependency>
          <groupId>org.apache.hive</groupId>
          <artifactId>hive-storage-api</artifactId>
          <exclusions>
            <exclusion>
              <groupId>org.slf4j</groupId>
              <artifactId>slf4j-api</artifactId>
            </exclusion>
          </exclusions>
        </dependency>
        <dependency>
          <groupId>com.google.protobuf</groupId>
          <artifactId>protobuf-java</artifactId>
        </dependency>
    </dependencies>

<profiles>
  <profile>
    <id>release311</id>
     <build>
      <plugins>
          <plugin>
                    <groupId>net.alchim31.maven</groupId>
                    <artifactId>scala-maven-plugin</artifactId>
                    <version>${scala.plugin.version}</version>
                    <executions>
                        <execution>
                            <id>scala-compile-first</id>
                            <goals>
                              <goal>compile</goal>
                            </goals>
                    <configuration>
                        <spark.version>3.1.1</spark.version>
                        <outputDir>${project.build.outputDirectory}/spark311</outputDir>
                        <classifier>spark311</classifier>
                        <scalaVersion>${scala.version}</scalaVersion>
                        <checkMultipleScalaVersions>true</checkMultipleScalaVersions>
                        <failOnMultipleScalaVersions>true</failOnMultipleScalaVersions>
                        <recompileMode>fixed</recompileMode>
                        <args>
                            <arg>-unchecked</arg>
                            <arg>-deprecation</arg>
                            <arg>-feature</arg>
                            <arg>-explaintypes</arg>
                            <arg>-Yno-adapted-args</arg>
                        </args>
                       <jvmArgs>
                            <jvmArg>-Xms1024m</jvmArg>
                            <jvmArg>-Xmx1024m</jvmArg>
                        </jvmArgs>
                        <javacArgs>
                            <javacArg>-source</javacArg>
                            <javacArg>${maven.compiler.source}</javacArg>
                            <javacArg>-target</javacArg>
                            <javacArg>${maven.compiler.target}</javacArg>
                            <javacArg>-Xlint:all,-serial,-path,-try</javacArg>
                        </javacArgs>
                    </configuration>
                        </execution>
                        <execution>
                            <id>scala-test-compile-first</id>
                            <goals>
                              <goal>testCompile</goal>
                            </goals>
                        </execution>
                        <execution>
                            <id>scala-compile-second</id>
                            <goals>
                              <goal>compile</goal>
                            </goals>
                    <configuration>
                        <spark.version>3.0.2</spark.version>
                        <outputDir>${project.build.outputDirectory}/spark302</outputDir>
                        <classifier>spark302</classifier>
                        <scalaVersion>${scala.version}</scalaVersion>
                        <checkMultipleScalaVersions>true</checkMultipleScalaVersions>
                        <failOnMultipleScalaVersions>true</failOnMultipleScalaVersions>
                        <recompileMode>fixed</recompileMode>
                        <args>
                            <arg>-unchecked</arg>
                            <arg>-deprecation</arg>
                            <arg>-feature</arg>
                            <arg>-explaintypes</arg>
                            <arg>-Yno-adapted-args</arg>
                        </args>
                       <jvmArgs>
                            <jvmArg>-Xms1024m</jvmArg>
                            <jvmArg>-Xmx1024m</jvmArg>
                        </jvmArgs>
                        <javacArgs>
                            <javacArg>-source</javacArg>
                            <javacArg>${maven.compiler.source}</javacArg>
                            <javacArg>-target</javacArg>
                            <javacArg>${maven.compiler.target}</javacArg>
                            <javacArg>-Xlint:all,-serial,-path,-try</javacArg>
                        </javacArgs>
                    </configuration>
                        </execution>
                    </executions>
                </plugin>
        <plugin>
          <artifactId>maven-jar-plugin</artifactId>
          <executions>
          <execution>
            <id>default-jar</id>
            <phase>package</phase>
            <goals>
              <goal>jar</goal>
            </goals>
            <configuration>
              <classesDirectory>${project.build.outputDirectory}/spark311</classesDirectory>
              <classifier>spark311</classifier>
<!--
              <includes>
                <include>spark311/**</include>
              </includes>
-->
            </configuration>
          </execution>
          <execution>
            <id>302</id>
            <phase>package</phase>
            <goals>
              <goal>jar</goal>
            </goals>
            <configuration>
              <classesDirectory>${project.build.outputDirectory}/spark302</classesDirectory>
              <classifier>spark302</classifier>
<!--
              <includes>
                <include>spark302/**</include>
              </includes>
-->
            </configuration>
          </execution>
          </executions>
        </plugin>
      </plugins>
    </build>
  </profile>
  <profile>
    <id>release302</id>
     <build>
      <plugins>
          <plugin>
                    <groupId>net.alchim31.maven</groupId>
                    <artifactId>scala-maven-plugin</artifactId>
                    <version>${scala.plugin.version}</version>
                    <executions>
                        <execution>
                            <id>scala-compile-first</id>
                            <goals>
                              <goal>compile</goal>
                            </goals>
                        </execution>
                        <execution>
                            <id>scala-test-compile-first</id>
                            <goals>
                              <goal>testCompile</goal>
                            </goals>
                        </execution>
                    </executions>
                    <configuration>
                        <spark.version>3.0.2</spark.version>
                        <outputDir>${project.build.outputDirectory}/spark302</outputDir>
                        <classifier>spark302</classifier>
                        <scalaVersion>${scala.version}</scalaVersion>
                        <checkMultipleScalaVersions>true</checkMultipleScalaVersions>
                        <failOnMultipleScalaVersions>true</failOnMultipleScalaVersions>
                        <recompileMode>fixed</recompileMode>
                        <useZincServer>true</useZincServer>
                        <args>
                            <arg>-unchecked</arg>
                            <arg>-deprecation</arg>
                            <arg>-feature</arg>
                            <arg>-explaintypes</arg>
                            <arg>-Yno-adapted-args</arg>
                        </args>
                       <jvmArgs>
                            <jvmArg>-Xms1024m</jvmArg>
                            <jvmArg>-Xmx1024m</jvmArg>
                        </jvmArgs>
                        <javacArgs>
                            <javacArg>-source</javacArg>
                            <javacArg>${maven.compiler.source}</javacArg>
                            <javacArg>-target</javacArg>
                            <javacArg>${maven.compiler.target}</javacArg>
                            <javacArg>-Xlint:all,-serial,-path,-try</javacArg>
                        </javacArgs>
                    </configuration>
                </plugin>
        <plugin>
          <artifactId>maven-jar-plugin</artifactId>
          <executions>
          <execution>
            <id>default-jar</id>
            <phase>package</phase>
            <goals>
              <goal>jar</goal>
            </goals>
            <configuration>
              <classifier>spark302</classifier>
              <includes>
                <include>**/*</include>
              </includes>
            </configuration>
          </execution>
          </executions>
        </plugin>
      </plugins>
    </build>
  </profile>
</profiles>

    <build>
        <!-- <outputDirectory>${project.build.directory}/classes-${spark.version}</outputDirectory> -->
        <!-- <finalName>rapids-4-spark-sql_${scala.binary.version}-${version}-${spark.version}</finalName> -->
        <resources>
          <resource>
            <!-- Include the properties file to provide the build information. -->
            <directory>${project.build.directory}/extra-resources</directory>
            <filtering>true</filtering>
          </resource>
          <resource>
            <directory>${project.basedir}/..</directory>
            <targetPath>META-INF</targetPath>
            <includes>
              <!-- The NOTICE will be taken care of by the antrun task below -->
              <include>LICENSE</include>
            </includes>
          </resource>
          <resource>
            <!-- Include python files for Python UDF support. -->
            <directory>${project.basedir}/../python/</directory>
          </resource>
        </resources>
        <plugins>
            <plugin>
              <artifactId>maven-antrun-plugin</artifactId>
              <executions>
                <execution>
                  <id>copy-notice</id>
                  <goals>
                    <goal>run</goal>
                  </goals>
                  <phase>process-resources</phase>
                  <configuration>
                    <target>
                      <!-- copy NOTICE-binary to NOTICE -->
                      <copy
                          todir="${project.build.directory}/classes/META-INF/"
                          verbose="true">
                        <fileset dir="${project.basedir}/..">
                          <include name="NOTICE-binary"/>
                        </fileset>
                        <mapper type="glob" from="*-binary" to="*"/>
                      </copy>
                    </target>
                  </configuration>
                </execution>
              </executions>
            </plugin>
            <!--
            <plugin>
                <groupId>org.scalastyle</groupId>
                <artifactId>scalastyle-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.rat</groupId>
                <artifactId>apache-rat-plugin</artifactId>
            </plugin>
-->
        </plugins>
    </build>
</project>
