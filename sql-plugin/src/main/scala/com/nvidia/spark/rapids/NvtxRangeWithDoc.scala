package com.nvidia.spark.rapids

import ai.rapids.cudf.{NvtxColor, NvtxRange}
import java.io.{File, FileOutputStream}
import scala.collection.mutable.ListBuffer

sealed class NvtxId private(val name: String, val doc: String) {
  def help(): Unit = println(s"$name|$doc")
}

object NvtxId {
  private def apply(name: String, doc: String): NvtxId = {
    val ret = new NvtxId(name, doc)
    NvtxRangeDocs.register(ret)
    ret
  }

  val ACQUIRE_GPU: NvtxId = NvtxId(name = "Acquire GPU", doc = "Time waiting for GPU semaphore " +
    "to be acquired")

  val RELEASE_GPU: NvtxId = NvtxId(name = "Release GPU", doc = "releasing the GPU semaphore")
}

object NvtxRangeDocs {
  private val registeredRanges = new ListBuffer[NvtxId]()

  def helpCommon(): Unit = {
    println("---")
    println("layout: page")
    println("title: Configuration")
    println("nav_order: 4")
    println("---")
    println(s"<!-- Generated by NvtxRangeDocs.help. DO NOT EDIT! -->")
    // scalastyle:off line.size.limit
    println("""# RAPIDS Accelerator for Apache Spark Nvtx Range Glossary
              |The following is the list of Nvtx ranges that are used throughout
              |the plugin. To add your own Nvtx range to the code, create an NvtxId
              |entry in NvtxRangeWithDoc.scala and create an `NvtxRangeWithDoc` in the
              |code location that you want to cover, passing in the newly created NvtxId.
              |
              |See [nvtx_profiling.md](https://nvidia.github.io/spark-rapids/docs/dev/nvtx_profiling.html) for more info.
              |
              |""".stripMargin)
    // scalastyle:on line.size.limit
    println("\n## Nvtx Ranges\n")
    println("Name | Description")
    println("-----|-------------")
  }

  def main(args: Array[String]): Unit = {
    val configs = new FileOutputStream(new File(args(0)))
    Console.withOut(configs) {
      Console.withErr(configs) {
        helpCommon()
        registeredRanges.foreach(_.help())
      }
    }
  }

  def register(nvtxId: NvtxId): Unit = registeredRanges += nvtxId
}

class NvtxRangeWithDoc(val id: NvtxId, color: NvtxColor) extends AutoCloseable {
  private val nvtxRange: NvtxRange = new NvtxRange(id.name, color)

  override def close(): Unit = nvtxRange.close()
}
